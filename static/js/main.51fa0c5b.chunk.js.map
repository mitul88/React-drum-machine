{"version":3,"sources":["component/DrumPad.js","App.js","reportWebVitals.js","index.js"],"names":["DrumPad","props","playSound","audio","current","play","id","parent","parentNode","classList","add","querySelector","innerText","React","createRef","this","addEventListener","remove","text","className","onClick","ref","src","Component","sounds","key","mp3","document","e","toUpperCase","getElementById","currentTime","App","map","sound","idx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qQAuCeA,E,kDApCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAWVC,UAAW,WACP,EAAKC,MAAMC,QAAQC,OAEnB,IAAMC,EAAK,EAAKH,MAAMC,QAAQE,GAExBC,EAAS,EAAKJ,MAAMC,QAAQI,WAClCD,EAAOE,UAAUC,IAAI,UAELH,EAAOC,WACfG,cAAc,MAAMC,UAA5B,UAA2CN,EAA3C,gBAlBA,EAAKH,MAAQU,IAAMC,YAHJ,E,gEAME,IAAD,OAChBC,KAAKZ,MAAMC,QAAQY,iBAAiB,SAAS,WAC1B,EAAKb,MAAMC,QAAQI,WAC3BC,UAAUQ,OAAO,e,+BAgBtB,IAAD,EACmBF,KAAKd,MAArBiB,EADH,EACGA,KAAMf,EADT,EACSA,MAClB,OACI,sBAAKG,GAAE,cAAiBa,UAAU,WAAWC,QAASL,KAAKb,UAA3D,UACKgB,EACD,uBAAOG,IAAKN,KAAKZ,MAAOmB,IAAKnB,EAAOgB,UAAU,OAAOb,GAAIY,W,GA/B/CL,IAAMU,WCItBC,EAAS,CACb,CACEC,IAAK,IACLC,IAAI,4DAEN,CACED,IAAK,IACLC,IAAI,4DAEN,CACED,IAAK,IACLC,IAAI,4DAEN,CACED,IAAK,IACLC,IAAI,8DAEN,CACED,IAAK,IACLC,IAAI,4DAEN,CACED,IAAK,IACLC,IAAI,0DAEN,CACED,IAAK,IACLC,IAAI,8DAEN,CACED,IAAK,IACLC,IAAI,8DAEN,CACED,IAAK,IACLC,IAAI,2DAKRC,SAASX,iBAAiB,WAAW,SAACY,GACpC,IAAMtB,EAAKsB,EAAEH,IAAII,cACX1B,EAAQwB,SAASG,eAAexB,GAEtC,GAAGH,EAAO,CACRA,EAAM4B,YAAc,EACpB,IAAMxB,EAASJ,EAAMK,WACrBD,EAAOE,UAAUC,IAAI,UAELH,EAAOC,WACfG,cAAc,MAAMC,UAA5B,UAA2CN,EAA3C,eAEAH,EAAME,WAIV,IAee2B,EAfH,WACR,OACI,sBAAK1B,GAAG,UAAUa,UAAU,UAA5B,UACE,0DAEEK,EAAOS,KAAI,SAACC,EAAOC,GAAR,OAET,aADd,CACe,EAAD,CAASjB,KAAMgB,EAAMT,IAAetB,MAAO+B,EAAMR,KAAlBS,UCzD9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASG,eAAe,iBAM1BM,M","file":"static/js/main.51fa0c5b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass DrumPad extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.audio = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.audio.current.addEventListener('ended', () => {\r\n            const parent = this.audio.current.parentNode;\r\n            parent.classList.remove('active');\r\n          })\r\n    }\r\n    playSound =()=> {\r\n        this.audio.current.play();\r\n\r\n        const id = this.audio.current.id;\r\n\r\n        const parent = this.audio.current.parentNode;\r\n        parent.classList.add('active');\r\n\r\n        const display = parent.parentNode;\r\n        display.querySelector('h1').innerText = `${id} is pressed`;\r\n    }\r\n\r\n\r\n    render() {\r\n        const { text, audio } = this.props;\r\n    return (\r\n        <div id={`drum-{text}`} className=\"drum-pad\" onClick={this.playSound}>\r\n            {text}\r\n            <audio ref={this.audio} src={audio} className=\"clip\" id={text} />\r\n        </div>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default DrumPad;","import React from \"react\";\nimport './App.css';\nimport DrumPad from \"./component/DrumPad\"\n\n\n// const keys = ['Q','W','E','A','S','D','Z','X','C'];\nconst sounds = [\n  {\n    key: 'Q',\n    mp3:'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n  },\n  {\n    key: 'W',\n    mp3:'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n  },\n  {\n    key: 'E',\n    mp3:'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n  },\n  {\n    key: 'A',\n    mp3:'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n  },\n  {\n    key: 'S',\n    mp3:'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n  },\n  {\n    key: 'D',\n    mp3:'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n  },\n  {\n    key: 'Z',\n    mp3:'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n  },\n  {\n    key: 'X',\n    mp3:'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n  },\n  {\n    key: 'C',\n    mp3:'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n  },\n]\n\n// for keypress sound vanilla js is used\ndocument.addEventListener('keydown', (e) => {\n  const id = e.key.toUpperCase();\n  const audio = document.getElementById(id);\n\n  if(audio) {\n    audio.currentTime = 0;\n    const parent = audio.parentNode;\n    parent.classList.add('active');\n\n    const display = parent.parentNode;\n    display.querySelector('h1').innerText = `${id} is pressed`;\n\n    audio.play();\n  }\n})\n \nconst App = () => {\n    return (\n        <div id=\"display\" className=\"display\">\n          <h1>Press the following keys</h1>\n          {\n            sounds.map((sound, idx)=>(\n// each value i.e key will display as text and their index i.e. idx will be set as key\n              <DrumPad text={sound.key} key={idx} audio={sound.mp3} />\n              ))\n          }\n        </div>\n    );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('drum-machine')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}